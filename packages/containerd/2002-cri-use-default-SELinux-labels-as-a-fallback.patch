From f62026df7b3c14b7b952630a9d4ff0e4c327d82a Mon Sep 17 00:00:00 2001
From: Ben Cressey <bcressey@amazon.com>
Date: Wed, 29 Apr 2020 15:11:37 +0000
Subject: [PATCH 2002/2002] cri: use default SELinux labels as a fallback

The transition rules in our SELinux policy give us a sensible default
for process labels, but there is no equivalent for mount labels. If
we do not supply the mount label as a context option for the mount,
the rootfs will not be writable.

By convention, the default process and mount labels are found in the
policy's lxc_contexts file, which is parsed by the SELinux module.
We use our new helper function to obtain these labels while bypassing
the MCS label pair allocation.

Signed-off-by: Ben Cressey <bcressey@amazon.com>
---
 vendor/github.com/containerd/cri/pkg/server/helpers.go | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/vendor/github.com/containerd/cri/pkg/server/helpers.go b/vendor/github.com/containerd/cri/pkg/server/helpers.go
index 572e7b9..cfac204 100644
--- a/vendor/github.com/containerd/cri/pkg/server/helpers.go
+++ b/vendor/github.com/containerd/cri/pkg/server/helpers.go
@@ -300,14 +300,14 @@ func (c *criService) ensureImageExists(ctx context.Context, ref string, config *
 
 func initSelinuxOpts(selinuxOpt *runtime.SELinuxOption) (string, string, error) {
 	if selinuxOpt == nil {
-		return "", "", nil
+		return label.DefaultLabels()
 	}
 
 	// Should ignored selinuxOpts if they are incomplete.
 	if selinuxOpt.GetUser() == "" ||
 		selinuxOpt.GetRole() == "" ||
 		selinuxOpt.GetType() == "" {
-		return "", "", nil
+		return label.DefaultLabels()
 	}
 
 	// make sure the format of "level" is correct.
-- 
2.21.0

