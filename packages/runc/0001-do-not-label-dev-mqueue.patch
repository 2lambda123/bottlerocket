From 2e6701d7f47c7cd8e75beb3c8669a2d6700008e2 Mon Sep 17 00:00:00 2001
From: Ben Cressey <bcressey@amazon.com>
Date: Wed, 27 May 2020 23:01:54 +0000
Subject: [PATCH] do not label /dev/mqueue

The mqueue filesystem shares its label with the host, and trying to
mount it with a different label leads to an "invalid mount" warning.

Signed-off-by: Ben Cressey <bcressey@amazon.com>
---
 libcontainer/rootfs_linux.go | 16 ++--------------
 1 file changed, 2 insertions(+), 14 deletions(-)

diff --git a/libcontainer/rootfs_linux.go b/libcontainer/rootfs_linux.go
index 106c4c2..32b6575 100644
--- a/libcontainer/rootfs_linux.go
+++ b/libcontainer/rootfs_linux.go
@@ -298,7 +298,7 @@ func mountToRootfs(m *configs.Mount, rootfs, mountLabel string, enableCgroupns b
 	}
 
 	switch m.Device {
-	case "proc", "sysfs":
+	case "proc", "sysfs", "mqueue":
 		// If the destination already exists and is not a directory, we bail
 		// out This is to avoid mounting through a symlink or similar -- which
 		// has been a "fun" attack scenario in the past.
@@ -314,20 +314,8 @@ func mountToRootfs(m *configs.Mount, rootfs, mountLabel string, enableCgroupns b
 		if err := os.MkdirAll(dest, 0755); err != nil {
 			return err
 		}
-		// Selinux kernels do not support labeling of /proc or /sys
+		// Selinux kernels do not support labeling of /proc, /sys, or /dev/mqueue
 		return mountPropagate(m, rootfs, "")
-	case "mqueue":
-		if err := os.MkdirAll(dest, 0755); err != nil {
-			return err
-		}
-		if err := mountPropagate(m, rootfs, mountLabel); err != nil {
-			// older kernels do not support labeling of /dev/mqueue
-			if err := mountPropagate(m, rootfs, ""); err != nil {
-				return err
-			}
-			return label.SetFileLabel(dest, mountLabel)
-		}
-		return nil
 	case "tmpfs":
 		copyUp := m.Extensions&configs.EXT_COPYUP == configs.EXT_COPYUP
 		tmpDir := ""
-- 
2.21.0

